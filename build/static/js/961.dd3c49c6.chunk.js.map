{"version":3,"file":"static/js/961.dd3c49c6.chunk.js","mappings":"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","sources":["components/ProfilePatientForm/index.js","modules/api/index.js","modules/hooks/useResetProfilePatient.js","modules/hooks/useSavePatient.js","pages/PersonInfo/index.js"],"sourcesContent":["import React, { memo } from 'react'\r\nimport { Button, Form, Space, Input, InputNumber } from 'antd'\r\nimport { useGlobalContext } from '../../modules/context/index.js'\r\nimport { ArrowsAltOutlined, ShrinkOutlined } from \"@ant-design/icons\";\r\nimport { Box, Collapse, useMediaQuery } from \"@chakra-ui/react\";\r\nimport useResetProfilePatient from '../../modules/hooks/useResetProfilePatient.js'\r\nimport useSavePatient from '../../modules/hooks/useSavePatient.js'\r\nimport { useStore } from '../../modules/store/index.js';\r\n\r\n\r\nfunction ProfilePatientForm() {\r\n\r\n    const {\r\n        patientForm,\r\n        inPatientCollapse,\r\n        setInPatientCollapse,\r\n    } = useGlobalContext()\r\n\r\n\r\n    const [isLargerThan600] = useMediaQuery('(min-width: 600px)')\r\n\r\n    const { resetProfilePatient } = useResetProfilePatient();\r\n\r\n    const handleClear = () => {\r\n        resetProfilePatient()\r\n    }\r\n\r\n    const { handleSave, isLoading } = useSavePatient()\r\n\r\n    const onFieldsChange = useStore((store) => store.onFieldsChange)\r\n\r\n    return (\r\n        <Box boxShadow='xl' p='2' bg='pink.100' borderRadius='15px' >\r\n            <Form\r\n                id='patientForm'\r\n                onFinish={handleSave}\r\n                form={patientForm}\r\n                layout={isLargerThan600 ? \"inline\" : \"vertical\"}\r\n                onFieldsChange={onFieldsChange}\r\n            >\r\n                <Form.Item\r\n                    label=\"Name\"\r\n                >\r\n                    <Space.Compact>\r\n\r\n                        <Form.Item\r\n                            noStyle\r\n                            key=\"patientName\"\r\n                            name=\"patientName\"\r\n                        >\r\n                            <Input placeholder=\"Name\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"patientId\"\r\n                            noStyle\r\n                        >\r\n                            <InputNumber readOnly addonBefore='№' placeholder=\"Patient №\" />\r\n                        </Form.Item>\r\n\r\n                        <Button\r\n                            type='ghost'\r\n                            onClick={() => setInPatientCollapse(prev => !prev)}\r\n                            icon={inPatientCollapse ? <ArrowsAltOutlined /> : <ShrinkOutlined />}\r\n\r\n                        />\r\n\r\n                    </Space.Compact>\r\n                </Form.Item>\r\n\r\n                <Collapse in={inPatientCollapse} animateOpacity>\r\n                    <Form\r\n                        form={patientForm}\r\n                        layout={isLargerThan600 ? \"inline\" : \"vertical\"}\r\n                        onFieldsChange={onFieldsChange}\r\n                    >\r\n\r\n                        <Form.Item key=\"patientSurName\" name=\"patientSurName\" label=\"Suriname\">\r\n                            <Input placeholder=\"Suriname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item key=\"patientPatronymic\" label=\"Patronymic\" name=\"patientPatronymic\">\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </Collapse>\r\n\r\n                <Form.Item noStyle>\r\n                    <Space>\r\n                        <Button\r\n                            onClick={handleSave}\r\n                            form='patientForm'\r\n                            type=\"primary\"\r\n                            htmlType='submit'\r\n                            loading={isLoading}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n\r\n                        <Button onClick={handleClear} danger>\r\n                            Clear\r\n                        </Button>\r\n                    </Space>\r\n\r\n                </Form.Item>\r\n            </Form>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default memo(ProfilePatientForm)","import { message } from \"antd\";\r\nimport sendRequest from \"./sendRequest\";\r\n\r\n\r\nconst messageOnSave = (res, nameFunc) => {\r\n    if (res && typeof res !== \"string\") {\r\n        message.success({\r\n            content: nameFunc + \" saved\",\r\n            key: nameFunc + \"_save\",\r\n            duration: 2,\r\n        });\r\n    } else {\r\n        message.error({\r\n            content: nameFunc + \" don't saved\",\r\n            key: nameFunc + \"_save\",\r\n            duration: 2,\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchPatientId = async () => {\r\n    try {\r\n        let res = await sendRequest(\"patientid\", {}, \"get\");\r\n        return res.data;\r\n    } catch (e) {\r\n        message.error({\r\n            content: e,\r\n            key: \"doc_save\",\r\n            duration: 2,\r\n        });\r\n    }\r\n};\r\n\r\nexport const postPersonInfo = async (obj) => {\r\n    let res = await sendRequest(\"vite\", obj, \"post\");\r\n    messageOnSave(res, \"Person Info\");\r\n    return res\r\n};\r\n\r\nexport const postMorby = async (obj) => {\r\n    let res = await sendRequest(\"morby\", obj, \"post\");\r\n    messageOnSave(res, \"Disease History\");\r\n};\r\n\r\nexport const postVisit = async (obj) => {\r\n    let res = await sendRequest(\"visits\", obj, \"post\");\r\n    messageOnSave(res, \"Visit\");\r\n};\r\n\r\nexport const postAnalyses = async (obj) => {\r\n    let res = await sendRequest(\"analyses\", obj, \"post\");\r\n    messageOnSave(res, \"Analyses\");\r\n};\r\n\r\nexport const postTreatment = async (obj) => {\r\n    let res = await sendRequest(\"treatment\", obj, \"post\");\r\n    messageOnSave(res, \"Treatment\");\r\n};\r\n\r\nexport const putVisitFormCalendar = async (obj) =>\r\n    sendRequest(\"visitsformcalendar\", obj, \"post\");\r\n\r\nconst controlPatient = async (patientId) =>\r\n    sendRequest(`patients/${patientId}`);\r\n\r\nexport const handleAddVisit = async ({ sendObj }) => {\r\n    let patientId;\r\n    if (sendObj.patientId) {\r\n        let id = sendObj.patientId;\r\n        controlPatient(id).then((res) => {\r\n            if (!res?.data) {\r\n                message.warning({\r\n                    content: \"The Patient not find\",\r\n                    key: \"info_message\",\r\n                    duration: 4,\r\n                });\r\n            } else {\r\n                patientId = sendObj.patientId;\r\n            }\r\n        });\r\n\r\n        patientId = sendObj.patientId;\r\n    } else {\r\n        patientId = await fetchPatientId();\r\n    }\r\n    const {\r\n        patientName,\r\n        patientSurName,\r\n        patientPatronymic,\r\n        visitDate,\r\n        phoneNumber,\r\n        status,\r\n        visitReason,\r\n    } = sendObj;\r\n    let sendObjVisit = {\r\n        patientVisitsList: [\r\n            {\r\n                patientId,\r\n                status,\r\n                visitDate,\r\n                visitReason,\r\n            },\r\n        ],\r\n    };\r\n    let sendPersonInfo = {\r\n        patientId,\r\n        patientName,\r\n        patientSurName,\r\n        patientPatronymic,\r\n        phoneNumber,\r\n    };\r\n    if (patientId) {\r\n        if (!sendObj.patientId) {\r\n            await postPersonInfo(sendPersonInfo);\r\n        }\r\n        let res = await putVisitFormCalendar(sendObjVisit);\r\n    }\r\n    return true\r\n};\r\n\r\n\r\nexport const fetchPathologistsPlace = async () => {\r\n    let res = await sendRequest(\"managers/pathologists\");\r\n    if (res?.data) {\r\n        return res.data\r\n    }\r\n};\r\nexport const fetchManagersPlace = async () => {\r\n    let res = await sendRequest(\"managers/places\");\r\n    if (res?.data) {\r\n        return res.data\r\n    }\r\n};\r\n","import { useGlobalContext } from \"../context/index.js\"\r\nimport { useStore } from \"../store/index.js\"\r\n\r\nfunction useResetProfilePatient() {\r\n\r\n    const { personInfoForm, diseaseHistoryForm, patientForm, setFamilyMembersList, treatmentHistoryForm, searchPatientForm } = useGlobalContext()\r\n\r\n    const setDataSourceDiseaseHistoryTable = useStore((store) => store.setDataSourceDiseaseHistoryTable)\r\n\r\n    const setSavedDrawingCanvas = useStore((store) => store.setSavedDrawingCanvas)\r\n\r\n\r\n    const setDescriptionsCanvas = useStore((store) => store.setDescriptionsCanvas)\r\n\r\n    const setDataSourceVisitTable = useStore((store) => store.setDataSourceVisitTable)\r\n\r\n    const setDataSourceAnalysisTable = useStore((store) => store.setDataSourceAnalysisTable)\r\n\r\n    const setDataSourceTreatmentTable = useStore((store) => store.setDataSourceTreatmentTable)\r\n\r\n    const setRecipeList = useStore((store) => store.setRecipeList)\r\n\r\n\r\n    const resetProfilePatient = () => {\r\n        searchPatientForm.resetFields()\r\n        patientForm.resetFields()\r\n        personInfoForm.resetFields()\r\n        diseaseHistoryForm.resetFields()\r\n        treatmentHistoryForm.resetFields()\r\n        setFamilyMembersList([])\r\n        setDataSourceDiseaseHistoryTable([])\r\n        setSavedDrawingCanvas({})\r\n        setDescriptionsCanvas({})\r\n        setDataSourceVisitTable([])\r\n        setDataSourceAnalysisTable([])\r\n        setDataSourceTreatmentTable([])\r\n        setRecipeList([])\r\n    }\r\n\r\n    return { resetProfilePatient }\r\n}\r\n\r\nexport default useResetProfilePatient","import dayjs from \"dayjs\"\r\nimport { fetchPatientId, postAnalyses, postMorby, postPersonInfo, postTreatment, postVisit } from \"../api/index.js\"\r\nimport { useGlobalContext } from \"../context/index.js\"\r\nimport { useStore } from \"../store/index.js\"\r\nimport { useState } from \"react\"\r\n\r\n\r\nfunction useSavePatient() {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const {\r\n         patientForm,\r\n        personInfoForm,\r\n        diseaseHistoryForm,\r\n        familyMembersList,\r\n        treatmentHistoryForm,\r\n    } = useGlobalContext()\r\n\r\n\r\n    const dataSourceDiseaseHistoryTable = useStore((store) => store.dataSourceDiseaseHistoryTable)\r\n    const savedDrawingCanvas = useStore((store) => store.savedDrawingCanvas)\r\n    const descriptionsCanvas = useStore((store) => store.descriptionsCanvas)\r\n    const dataSourceVisitTable = useStore((store) => store.dataSourceVisitTable)\r\n    const dataSourceAnalysisTable = useStore((store) => store.dataSourceAnalysisTable)\r\n    const dataSourceTreatmentTable = useStore((store) => store.dataSourceTreatmentTable)\r\n    const recipeList = useStore((store) => store.recipeList)\r\n\r\n\r\n    const savePersonInfo = (patientId) => {\r\n        const {\r\n            patientName,\r\n            patientSurName,\r\n            patientPatronymic,\r\n        } = patientForm.getFieldsValue()\r\n\r\n        let { birthDate, alkogol, smoke } = personInfoForm.getFieldsValue()\r\n\r\n        const sendObj = {\r\n            ...personInfoForm.getFieldsValue(),\r\n            birthDate: dayjs(birthDate).format('YYYY-MM-DD'),\r\n            alkogol: alkogol ? 1 : 0,\r\n            smoke: smoke ? 1 : 0,\r\n            patientName,\r\n            patientSurName,\r\n            patientPatronymic,\r\n            patientId,\r\n        };\r\n\r\n        postPersonInfo(sendObj);\r\n    }\r\n\r\n    const saveMorby = (patientId) => {\r\n        savedDrawingCanvas.deseaseImageDesc =\r\n            JSON.stringify(descriptionsCanvas);\r\n\r\n        const sendObj = {\r\n            ...diseaseHistoryForm.getFieldsValue(),\r\n            patientId,\r\n            familyMembersList,\r\n            deseaseImagesList: savedDrawingCanvas,\r\n            deseaseHistoryDynamicsList: dataSourceDiseaseHistoryTable,\r\n        };\r\n        postMorby(sendObj);\r\n    }\r\n\r\n    const saveVisit = (patientId) => {\r\n        const sendObj = {\r\n            patientVisitsList: dataSourceVisitTable,\r\n            patientId\r\n        };\r\n        postVisit(sendObj);\r\n    }\r\n\r\n    const saveAnalyses = (patientId) => {\r\n        const sendObj = {\r\n            analyzesMediaList: dataSourceAnalysisTable,\r\n            patientId\r\n        };\r\n        postAnalyses(sendObj);\r\n    }\r\n\r\n    const saveTreatment = (patientId) => {\r\n        const sendObj = {\r\n            ...treatmentHistoryForm.getFieldsValue(),\r\n            patientId,\r\n            treatmentDynamics: dataSourceTreatmentTable,\r\n            recipeList,\r\n        };\r\n        postTreatment(sendObj);\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        setIsLoading(true)\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1000)\r\n\r\n        let id = patientForm.getFieldsValue().patientId;\r\n        let patientId;\r\n        if (id) {\r\n            patientId = id;\r\n        } else {\r\n            patientId = await fetchPatientId();\r\n        }\r\n        if (patientId) {\r\n            Promise.all([\r\n                savePersonInfo(patientId),\r\n                saveMorby(patientId),\r\n                saveVisit(patientId),\r\n                saveAnalyses(patientId),\r\n                saveTreatment(patientId),\r\n            ])\r\n        }\r\n    }\r\n\r\n\r\n    return { handleSave, isLoading }\r\n}\r\n\r\nexport default useSavePatient","import React, { memo } from 'react'\r\nimport { Checkbox, DatePicker, Form, Input, InputNumber, Rate, Select } from \"antd\";\r\nimport { SimpleGrid } from '@chakra-ui/react';\r\nimport ProfilePatientForm from '../../components/ProfilePatientForm';\r\nimport { useGlobalContext } from '../../modules/context/index.js';\r\nimport { useStore } from '../../modules/store';\r\n\r\nconst OPTIONS = [\"0-6\", \"6-12\", \"12-24\", \"24+\"];\r\n\r\nfunction PersonInfo() {\r\n\r\n    const { personInfoForm } = useGlobalContext()\r\n\r\n    const onFieldsChange = useStore((store) => store.onFieldsChange)\r\n\r\n\r\n    return (\r\n        <>\r\n            <ProfilePatientForm />\r\n\r\n            <SimpleGrid columns={['1', '2']} p='2' my='2' boxShadow='xl' bg='pink.50' borderRadius='15px'>\r\n\r\n                <Form\r\n                    form={personInfoForm}\r\n                    labelWrap\r\n                    labelAlign=\"right\"\r\n                    labelCol={{\r\n                        span: 8,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 16,\r\n                    }}\r\n                    style={{\r\n                        maxWidth: 600,\r\n                    }}\r\n                    initialValues={{\r\n                        gender: 'Female',\r\n                    }}\r\n                    onFieldsChange={onFieldsChange}\r\n                >\r\n                    <Form.Item label=\"Birth date\" name=\"birthDate\">\r\n                        <DatePicker allowClear />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Birth place\" name=\"birthPlace\">\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"phoneNumber\" label=\"Phone Number\">\r\n                        <Input type='number' />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Sex\" name=\"gender\">\r\n                        <Select\r\n                            allowClear\r\n                        >\r\n                            <Select.Option value=\"Female\">Female</Select.Option>\r\n                            <Select.Option value=\"Male\">Male</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Marital status\" name=\"maritalStatus\">\r\n                        <Select allowClear>\r\n                            <Select.Option value=\"Single\">Single</Select.Option>\r\n                            <Select.Option value=\"Married\">Married</Select.Option>\r\n                            <Select.Option value=\"Divorced\">Divorced</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Sex status\" name=\"sexStatus\">\r\n                        <Select allowClear>\r\n                            <Select.Option value=\"Regular\">Regular</Select.Option>\r\n                            <Select.Option value=\"Irregular\">Irregular</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item valuePropName=\"checked\" label=\"Alcohol\" name=\"alkogol\">\r\n                        <Checkbox />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item valuePropName=\"checked\" label=\"Smoking \" name=\"smoke\">\r\n                        <Checkbox />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Recommendation person\" name=\"recommendationPerson\">\r\n                        <Input allowClear />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Raiting\" name=\"raiting\">\r\n                        <Rate />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Height\" name=\"height\">\r\n                        <InputNumber min={0} defaultValue={0} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Weight\" name=\"weight\">\r\n                        <InputNumber min={0} defaultValue={0} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"IMT\" name=\"imt\">\r\n                        <InputNumber min={0} defaultValue={0} />\r\n                    </Form.Item>\r\n                </Form>\r\n                <Form\r\n                    form={personInfoForm}\r\n                    labelAlign=\"right\"\r\n                    labelCol={{\r\n                        span: 8,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 16,\r\n                    }}\r\n                    labelWrap\r\n                    style={{\r\n                        maxWidth: 600,\r\n                    }}\r\n                    onFieldsChange={onFieldsChange}\r\n                >\r\n\r\n                    <Form.Item\r\n                        noStyle\r\n                        shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\r\n                    >\r\n                        {({ getFieldValue }) =>\r\n                            getFieldValue('gender') === 'Female' ? (\r\n                                <>\r\n\r\n                                    <Form.Item\r\n                                        label=\"A cure for infertility\"\r\n                                        name=\"cureForInfertility\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Menopause\" name=\"menopause\">\r\n                                        <Input />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Menarche\" name=\"menarxe\">\r\n                                        <Input />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Age of first childbirth\"\r\n                                        name=\"firstChildbirth\"\r\n                                    >\r\n                                        <InputNumber\r\n                                            min={10}\r\n                                            max={60}\r\n                                            defaultValue={0}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Age of last childbirth\" name=\"lastChildbirth\">\r\n                                        <InputNumber\r\n                                            min={10}\r\n                                            max={60}\r\n                                            defaultValue={0}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Number of abortions\" name=\"abortCount\">\r\n                                        <InputNumber min={0} defaultValue={0} />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Breastfeeding period\" name=\"lactationPeriod\">\r\n                                        <Select allowClear >\r\n                                            {OPTIONS.map((option) => (\r\n                                                <Select.Option key={option} value={option}>\r\n                                                    {option}\r\n                                                </Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Number of artificial inseminations\"\r\n                                        name=\"artificialInseminationCount\"\r\n                                    >\r\n                                        <InputNumber min={0} defaultValue={0} />\r\n                                    </Form.Item>\r\n                                </>\r\n                            ) : null\r\n                        }\r\n\r\n                    </Form.Item>\r\n                </Form>\r\n            </SimpleGrid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PersonInfo)"],"names":["ProfilePatientForm","_useGlobalContext","useGlobalContext","patientForm","inPatientCollapse","setInPatientCollapse","_useMediaQuery","useMediaQuery","isLargerThan600","_slicedToArray","resetProfilePatient","useResetProfilePatient","_useSavePatient","useSavePatient","handleSave","isLoading","onFieldsChange","useStore","store","_jsx","Box","boxShadow","p","bg","borderRadius","children","_jsxs","Form","id","onFinish","form","layout","label","Space","noStyle","name","Input","placeholder","InputNumber","readOnly","addonBefore","Button","type","onClick","prev","icon","ArrowsAltOutlined","ShrinkOutlined","Collapse","in","animateOpacity","htmlType","loading","danger","memo","messageOnSave","res","nameFunc","message","content","key","duration","fetchPatientId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","sendRequest","sent","abrupt","data","t0","stop","apply","arguments","postPersonInfo","_ref2","_callee2","obj","_context2","_x","postMorby","_ref3","_callee3","_context3","_x2","postVisit","_ref4","_callee4","_context4","_x3","postAnalyses","_ref5","_callee5","_context5","_x4","postTreatment","_ref6","_callee6","_context6","_x5","putVisitFormCalendar","_ref7","_callee7","_context7","_x6","controlPatient","_ref8","_callee8","patientId","_context8","concat","_x7","handleAddVisit","_ref10","_callee9","_ref9","sendObj","patientName","patientSurName","patientPatronymic","visitDate","phoneNumber","status","visitReason","sendObjVisit","sendPersonInfo","_context9","then","patientVisitsList","_x8","fetchPathologistsPlace","_ref11","_callee10","_context10","fetchManagersPlace","_ref12","_callee11","_context11","personInfoForm","diseaseHistoryForm","setFamilyMembersList","treatmentHistoryForm","searchPatientForm","setDataSourceDiseaseHistoryTable","setSavedDrawingCanvas","setDescriptionsCanvas","setDataSourceVisitTable","setDataSourceAnalysisTable","setDataSourceTreatmentTable","setRecipeList","resetFields","_useState","useState","_useState2","setIsLoading","familyMembersList","dataSourceDiseaseHistoryTable","savedDrawingCanvas","descriptionsCanvas","dataSourceVisitTable","dataSourceAnalysisTable","dataSourceTreatmentTable","recipeList","savePersonInfo","_patientForm$getField","getFieldsValue","_personInfoForm$getFi","birthDate","alkogol","smoke","_objectSpread","dayjs","format","saveMorby","deseaseImageDesc","JSON","stringify","deseaseImagesList","deseaseHistoryDynamicsList","saveVisit","saveAnalyses","analyzesMediaList","saveTreatment","treatmentDynamics","setTimeout","Promise","all","OPTIONS","PersonInfo","_Fragment","SimpleGrid","columns","my","labelWrap","labelAlign","labelCol","span","wrapperCol","style","maxWidth","initialValues","gender","DatePicker","allowClear","Select","value","valuePropName","Checkbox","Rate","min","defaultValue","shouldUpdate","prevValues","currentValues","getFieldValue","max","map","option"],"sourceRoot":""}